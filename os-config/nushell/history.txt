ls
exi
ls
ls ./os-config/
ls ./os-config/nushell/
la
ls -al ./os-config/nushell/
cat ./os-config/nushell/history.txt
ls 2to3
ls
l
cd 
kak ./dotfiles/os-config/nushell/config.nu
if $env
if $env.PWD == $env.HOME { echo 1 } else { echo 2 }
$env.PWD ~= $env.HOME
$env.PWD == $env.HOME
$env.PWD ~ $env.HOME
$env.PWD starts-with $env.HOME
$env.PWD | str starts-with $env.HOME
$env.PWD | str starts-with $env.HOME { echo $env.PWD | str find-replace "$env.HOME" "~" }
echo $env.PWD | str find-replace "$env.HOME" "~" }
echo $env.PWD | str find-replace "$env.HOME" "~"
echo $env.PWD | str find-replace $env.HOME "~"
cd ..
echo $env.PWD | str find-replace $env.HOME "~"
ls
asd
la
ls
starship
starship print-config
starship
starship explain
ls
kak ./starship.toml
ls
eexit
ls
starship explain
starship print-config
starship prompt
starship prompt --hlep
starship prompt --help
ls ~/.config/
ls ./dotbot/
ls
cat ./install.conf.yaml
cat ./zshrc
ls
echo $env.STARSHIP_CONFIG
echo $env.HOME + "sad"
echo $env.HOME "sad"
$env.HOME "sad"
[$env.HOME "sad"] | str collect
echo $env.STARSHIP_CONFIG
[$env.HOME "sad"] | str collect
kak ./starship.toml
ls
sz
echo $nu
sz
source ($nu)
source ($nu.config-path)
source ($nu.config-path | str)
source ($nu.config-path | str collect)
echo ($nu.config-path | str collect)
echo "($nu.config-path | str collect)"
echo `($nu.config-path | str collect)`
echo $"$nu.config-path | str collect"
echo $"i($nu.config-path | str collect)"
source $"i($nu.config-path | str collect)"
source $"i($nu.config-path)"
source $"($nu.config-path)"
source $"\"($nu.config-path)\""
echo $"\"($nu.config-path)\""
cat "/Users/johan/Library/Application Support/nushell/config.nu"
echo $nu.config-path | path
echo $nu.config-path | path exists
echo $nu.config-path | path 
echo $nu.config-path
source $nu.config-path
wd 
source $nu.config-path
source ($nu.config-path)
source $"($nu.config-path)"
echo $"($nu.config-path)"
source "/Users/johan/Library/Application Support/nushell/config.nu<\n>"
source "/Users/johan/Library/Application Support/nushell/config.nu"
$env | str collect
$env
source $env.NU_LIB_DIR
source ($env.NU_LIB_DIR)
source ($NU_LIB_DIR)
source ($envNU_LIB_DIR)
$env.NU_LIB_DIR 
$env.NU_LIB_DIRS
$env.NU_LIB_DIRS | path
$env.NU_LIB_DIRS | path relative-to "../"
$nu.config-path | path relative-to ""
$nu.config-path | path relative-to ".."
$nu.config-path | path relative-to "../"
$nu.config-path | path 
$nu.config-path | path join ".."
$nu.config-path | path join ".." | path expand
$nu.config-path | path join "../config.nu'" | path expand
$nu.config-path | path join "../config.nu" | path expand
source ($nu.config-path | path join "../config.nu" | path expand)
eval ($nu.config-path | path join "../config.nu" | path expand)
eval $"($nu.config-path | path join "../config.nu" | path expand)"
exec $"($nu.config-path | path join "../config.nu" | path expand)"
exec $"source ($nu.config-path | path join "../config.nu" | path expand)"
nu -c $"source ($nu.config-path | path join "../config.nu" | path expand)"
ls
nu -c $"source ($nu.config-path | path join "../config.nu" | path expand)"
nu -c $"source ($nu.config-path)"
nu -c $"source '($nu.config-path)'"
nu -c $"source ($nu.config-path | path expand)"
source ($nu.config-path | path expand)
source $"($nu.config-path | path expand)"
ls
cd
ls
ls | sort-by | ^size
ls | sort-by | size
ls | sort-by size
ls | sort-by | size | reverse
ls | sort-by size | reverse
ls
echo $"($nu.config-path)" | path
echo $"($nu.config-path)" | path dirname
echo $"($nu.config-path)" | path dirname | path join "completions/*.nu"
source $"($nu.config-path | path expand)"
source "/Users/johan/Library/Application Support/nushell/config.nu"
mkdir ./os-config/nushell/completions
source "/Users/johan/Library/Application Support/nushell/config.nu"
touch ./os-config/nushell/completions/completions.nu
source "/Users/johan/Library/Application Support/nushell/config.nu"
echo $
echo $completions_path
$completions_path | path exists
$completions_path | path expand
$completions_path | path exists
$completions_path | path dirname | path exists
source "/Users/johan/Library/Application Support/nushell/config.nu"
echo $completions_path
source "/Users/johan/Library/Application Support/nushell/config.nu"
ls
cd
ls
^ls
ls
^lsls
ls
cd ./Git/kinnov/france/kinnov-front-france/
ls
cat ./package.json | grep "script"
cat ./package.json | grep "scripts"
cat ./package.json | jq
cat ./package.json | jq '.script[]'
cat ./package.json | jq '.scripts'
cat ./package.json | jq '.scripts | .key'
cat ./package.json | jq '.scripts[]'
cat ./package.json | jq '.scripts .key[]'
cat ./package.json | jq '.scripts | .key[]'
cat ./package.json | jq '.scripts | key[]'
cat ./package.json | jq '.scripts | key'
cat ./package.json | jq '.scripts'
cat ./package.json | jq '.scripts | .[]' 
cat ./package.json | jq '.scripts | .key[]' 
cat ./package.json | jq '.scripts | .k[]' 
cat ./package.json | jq '.scripts | .[]' 
ls
